{"is_source_file": true, "format": "Python", "description": "This is the main source file for a FastAPI backend API implementing an event impact insights SaaS platform. It defines the FastAPI app, authentication utilities, and CRUD endpoints for users, venues, events, metrics, data submission, and impact reports. It makes use of Pydantic schemas, SQLAlchemy ORM models, JWT for auth, and includes middleware setup.", "external_files": ["src.api.database", "src.api.models.orm_models", "src.api.models.pydantic_schemas"], "external_methods": ["orm_models.User", "orm_models.Venue", "orm_models.Event", "orm_models.SustainabilityMetric", "orm_models.EventSustainabilityData", "orm_models.ImpactReport", "get_db", "verify_password", "get_password_hash", "create_access_token", "get_user_by_email", "authenticate_user", "get_current_user", "require_admin"], "published": ["health_check", "frontend_login", "frontend_register", "login_token", "list_users", "get_my_user_info", "get_user", "delete_user", "create_venue", "list_venues", "get_venue", "update_venue", "delete_venue", "create_event", "list_events", "get_event", "update_event", "delete_event", "create_metric", "list_metrics", "submit_event_metric", "list_event_metrics", "create_impact_report", "list_impact_reports", "get_impact_report", "get_openapi_schema", "health_check"], "classes": [], "methods": [{"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verify a plaintext password against hash.", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Hash a new password string.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Create a JWT access token.", "scope": "", "scopeKind": ""}, {"name": "get_user_by_email(db: Session, email: str)", "description": "Get a user by email address.", "scope": "", "scopeKind": ""}, {"name": "authenticate_user(db: Session, email: str, password: str)", "description": "Check credentials and return user if correct.", "scope": "", "scopeKind": ""}, {"name": "get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Validate JWT and fetch current user.", "scope": "", "scopeKind": ""}, {"name": "require_admin(user: orm_models.User = Depends(get_current_user))", "description": "Ensure current user is admin.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Basic health check endpoint.", "scope": "", "scopeKind": ""}, {"name": "frontend_login(request: Request, db: Session = Depends(get_db))", "description": "Accepts JSON {username, password}, validates user and returns {token}. Allows React frontend to authenticate against the backend.", "scope": "", "scopeKind": ""}, {"name": "frontend_register(request: Request, db: Session = Depends(get_db))", "description": "Accepts JSON {username, password}, creates user and returns {token}. Allows React frontend to register and log in.", "scope": "", "scopeKind": ""}, {"name": "login_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticate and obtain a JWT access token for API.", "scope": "", "scopeKind": ""}, {"name": "list_users(db: Session = Depends(get_db))", "description": "List all users (admin only).", "scope": "", "scopeKind": ""}, {"name": "get_my_user_info(current_user: orm_models.User = Depends(get_current_user))", "description": "Get info about the currently authenticated user.", "scope": "", "scopeKind": ""}, {"name": "get_user(user_id: int, db: Session = Depends(get_db))", "description": "Get user details by user ID (admin only).", "scope": "", "scopeKind": ""}, {"name": "delete_user(user_id: int, db: Session = Depends(get_db))", "description": "Delete user by ID (admin only).", "scope": "", "scopeKind": ""}, {"name": "create_venue(venue: VenueCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Create a new venue.", "scope": "", "scopeKind": ""}, {"name": "list_venues(db: Session = Depends(get_db))", "description": "List all venues.", "scope": "", "scopeKind": ""}, {"name": "get_venue(venue_id: int, db: Session = Depends(get_db))", "description": "Get details for a specific venue.", "scope": "", "scopeKind": ""}, {"name": "update_venue(venue_id: int, venue: VenueCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Update a venue's info (owner or admin).", "scope": "", "scopeKind": ""}, {"name": "delete_venue(venue_id: int, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Delete a venue (owner or admin).", "scope": "", "scopeKind": ""}, {"name": "create_event(event: EventCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Create an event at a venue.", "scope": "", "scopeKind": ""}, {"name": "list_events(db: Session = Depends(get_db), venue_id: Optional[int] = None)", "description": "List events, optionally filtered by venue.", "scope": "", "scopeKind": ""}, {"name": "get_event(event_id: int, db: Session = Depends(get_db))", "description": "Get details for a specific event.", "scope": "", "scopeKind": ""}, {"name": "update_event(event_id: int, event: EventCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Update an event (venue owner or admin).", "scope": "", "scopeKind": ""}, {"name": "delete_event(event_id: int, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Delete an event (venue owner or admin).", "scope": "", "scopeKind": ""}, {"name": "create_metric(metric: SustainabilityMetricCreate, db: Session = Depends(get_db))", "description": "Define new sustainability metric (admin only).", "scope": "", "scopeKind": ""}, {"name": "list_metrics(db: Session = Depends(get_db))", "description": "List all defined sustainability metrics.", "scope": "", "scopeKind": ""}, {"name": "submit_event_metric(data: EventSustainabilityDataCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Submit a metric value for a specific event.", "scope": "", "scopeKind": ""}, {"name": "list_event_metrics(event_id: Optional[int] = None, db: Session = Depends(get_db))", "description": "List metric submissions, optionally by event.", "scope": "", "scopeKind": ""}, {"name": "create_impact_report(report_data: ImpactReportCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))", "description": "Generate impact report for an event (admin or venue owner).", "scope": "", "scopeKind": ""}, {"name": "list_impact_reports(db: Session = Depends(get_db), event_id: Optional[int] = None)", "description": "List all impact reports, optionally filtered by event.", "scope": "", "scopeKind": ""}, {"name": "get_impact_report(report_id: int, db: Session = Depends(get_db))", "description": "Retrieve a specific impact report by ID.", "scope": "", "scopeKind": ""}, {"name": "get_openapi_schema()", "description": "Return the current OpenAPI schema as JSON.", "scope": "", "scopeKind": ""}], "search-terms": ["FastAPI", "JWT", "Sustainability Metrics", "Impact Reports", "Venue Owner", "Event Data Management", "User Authentication", "API Endpoints", "Impact Insights"], "state": 2, "file_id": 3, "knowledge_revision": 36, "git_revision": "5aedde94d1d9690112bd61cd648f47e0975885b0", "revision_history": [{"19": "bb593813a060886fdaed8f5d794394a699ff6f13"}, {"31": "bb593813a060886fdaed8f5d794394a699ff6f13"}, {"34": "db99506fee23bc0e726eb1ea0d9115e2c84048a5"}, {"35": "56718cf4c6de036774e30aa672ee46c3ee023523"}, {"36": "5aedde94d1d9690112bd61cd648f47e0975885b0"}], "ctags": [{"_type": "tag", "name": "ALLOWED_ORIGINS", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^ALLOWED_ORIGINS = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^JWT_ACCESS_TOKEN_EXPIRE_MINUTES = 120$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_ALGORITHM", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^JWT_ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET_KEY", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"dev-secret-key\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def authenticate_user(db: Session, email: str, password: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, email: str, password: str)"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_event", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def create_event(event: EventCreate, db: Session = Depends(get_db), current_user: orm_models.Use/", "language": "Python", "kind": "function", "signature": "(event: EventCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "create_impact_report", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def create_impact_report(report_data: ImpactReportCreate, db: Session = Depends(get_db), current/", "language": "Python", "kind": "function", "signature": "(report_data: ImpactReportCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "create_metric", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def create_metric(metric: SustainabilityMetricCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(metric: SustainabilityMetricCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "create_venue", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def create_venue(venue: VenueCreate, db: Session = Depends(get_db), current_user: orm_models.Use/", "language": "Python", "kind": "function", "signature": "(venue: VenueCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "delete_event", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def delete_event(event_id: int, db: Session = Depends(get_db), current_user: orm_models.User = D/", "language": "Python", "kind": "function", "signature": "(event_id: int, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "delete_user", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def delete_user(user_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_venue", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def delete_venue(venue_id: int, db: Session = Depends(get_db), current_user: orm_models.User = D/", "language": "Python", "kind": "function", "signature": "(venue_id: int, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "frontend_login", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^async def frontend_login(request: Request, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(request: Request, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "frontend_register", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^async def frontend_register(request: Request, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(request: Request, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_event", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_event(event_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(event_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_impact_report", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_impact_report(report_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(report_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_my_user_info", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_my_user_info(current_user: orm_models.User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_openapi_schema", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_openapi_schema():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "get_user", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_user(user_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_user_by_email(db: Session, email: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, email: str)"}, {"_type": "tag", "name": "get_venue", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def get_venue(venue_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(venue_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_event_metrics", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def list_event_metrics(event_id: Optional[int] = None, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(event_id: Optional[int] = None, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_events", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def list_events(db: Session = Depends(get_db), venue_id: Optional[int] = None):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), venue_id: Optional[int] = None)"}, {"_type": "tag", "name": "list_impact_reports", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def list_impact_reports(db: Session = Depends(get_db), event_id: Optional[int] = None):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), event_id: Optional[int] = None)"}, {"_type": "tag", "name": "list_metrics", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def list_metrics(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_users", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def list_users(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_venues", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def list_venues(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login_token", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def login_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "require_admin", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def require_admin(user: orm_models.User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "submit_event_metric", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def submit_event_metric(data: EventSustainabilityDataCreate, db: Session = Depends(get_db), curr/", "language": "Python", "kind": "function", "signature": "(data: EventSustainabilityDataCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "update_event", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def update_event(event_id: int, event: EventCreate, db: Session = Depends(get_db), current_user:/", "language": "Python", "kind": "function", "signature": "(event_id: int, event: EventCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "update_venue", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def update_venue(venue_id: int, venue: VenueCreate, db: Session = Depends(get_db), current_user:/", "language": "Python", "kind": "function", "signature": "(venue_id: int, venue: VenueCreate, db: Session = Depends(get_db), current_user: orm_models.User = Depends(get_current_user))"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/event-impact-insights-4c5e6926/backend_api/src/api/main.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "2b0e74cf6de815166fbec0aba0b403c1", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/src/api/main.py", "fields": [{"name": "ALLOWED_ORIGINS = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ACCESS_TOKEN_EXPIRE_MINUTES = 120", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET_KEY = os.getenv(\"JWT_SECRET_KEY\", \"dev-secret-key\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}